name: Release
on:
  push:
    branches:
      - main
    tags:
      - "v*"
    paths-ignore:
      - "**.md"
      - "docs/**"
      - ".github/**"
      - "!.github/workflows/release.yml"

jobs:
  build:
    permissions: write-all
    strategy:
      fail-fast: false
      matrix:
        job:
          - {
              name: "phantom-core-android",
              os: "ubuntu-latest",
              target: "android",
            }
          - {
              name: "phantom-core-linux-amd64",
              os: "ubuntu-20.04",
              target: "linux-amd64",
            }
          - {
              name: "phantom-core-windows-amd64",
              os: "ubuntu-latest",
              target: "windows-amd64",
              aarch: "x64",
            }
          - {
              name: "phantom-core-macos-universal",
              os: "macOS-13",
              target: "macos-universal",
            }
          - { name: "phantom-core-ios", os: "macOS-13", target: "ios" }

    runs-on: ${{ matrix.job.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          check-latest: false

      - name: Setup Java
        if: startsWith(matrix.job.target,'android')
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup NDK
        if: startsWith(matrix.job.target,'android')
        uses: nttld/setup-ndk@v1.4.0
        id: setup-ndk
        with:
          ndk-version: r26b
          add-to-path: true
          local-cache: false
          link-to-sdk: true

      - name: Setup MinGW
        if: startsWith(matrix.job.target,'windows')
        uses: egor-tensin/setup-mingw@v2
        with:
          platform: ${{ matrix.job.aarch }}
      - name: Setup macos
        if: startsWith(matrix.job.target,'macos') ||  startsWith(matrix.job.target,'ios')
        run: |
          brew install create-dmg tree coreutils

      - name: Build
        run: |
          make -j$(($(nproc) + 1)) ${{ matrix.job.target }}

      - name: zip
        run: |
          tree 
          rm -f /*.h */*.h
          files=$(ls | grep -E '^(libcore\.(dll|so|dylib|aar|a)|Libcore.xcframework|lib)$')
          echo tar -czvf ${{ matrix.job.name }}.tar.gz  $files
          tar -czvf ${{ matrix.job.name }}.tar.gz  $files

        working-directory: bin
      - uses: actions/upload-artifact@v4
        if: ${{ success() }}
        with:
          name: ${{ matrix.job.name }}
          path: bin/*.tar.gz
          retention-days: 1

  upload-prerelease:
    permissions: write-all
    if: ${{ github.ref_type=='branch' }}
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          pattern: phantom-*
          path: bin/

      - name: Display Files Structure
        run: tree
        working-directory: bin

      - name: Delete Current Release Assets
        uses: 8Mi-Tech/delete-release-assets-action@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: "draft"
          deleteOnlyFromDrafts: false

      - name: Create or Update Draft Release
        uses: softprops/action-gh-release@v1
        if: ${{ success() }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: ./bin/*.tar.gz
          name: "draft"
          tag_name: "draft"
          prerelease: true

  upload-release:
    permissions: write-all
    if: ${{ github.ref_type=='tag' }}
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          pattern: phantom-*
          path: bin/

      - name: Display Files Structure
        run: ls -R
        working-directory: bin

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        if: ${{ success() }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          files: bin/*.tar.gz
